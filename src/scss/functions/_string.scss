/// Split a string
///
/// @param {String} $string - Input string.
/// @param {String} $separator - Separator.
///
/// @example scss
///     $split: str-split('4by3', 'by');
///
@function str-split(
    $string,
    $separator
) {
    $str-length: str-length($string);
    $sep-length: str-length($separator);

    $index : str-index($string,  $separator);
 
    $str-1 : str-slice($string, 1, $index - 1);
    $str-2 : str-slice($string, $index + $sep-length);
 
    @return $str-1 $str-2;
}

/// @function explode() -- split a string into a list of strings
///  {string} $string: the string to be split
///  {string} $delimiter: the boundary string
///  @return {list} the result list
/// @Link https://gist.github.com/danielpchen/3677421ea15dcf2579ff
@function explode($string, $delimiter) {
	$result: ();
	@if $delimiter == "" {
		@for $i from 1 through str-length($string) {
			$result: append($result, str-slice($string, $i, $i));
		}
		@return $result;
	}
	$exploding: true;
	@while $exploding {
		$d-index: str-index($string, $delimiter);
		@if $d-index {
			@if $d-index > 1 {
				$result: append($result, str-slice($string, 1, $d-index - 1));
				$string: str-slice($string, $d-index + str-length($delimiter));
			} @else if $d-index == 1 {
				$string: str-slice($string, 1, $d-index + str-length($delimiter));
			} @else {
				$result: append($result, $string);
				$exploding: false;
			}
		} @else {
			$result: append($result, $string);
			$exploding: false;
		}
	}
	@return $result;
}
